version: '3.8'
services:

  nginx:
    restart: always
    networks:
      - internal_net
    ports:
      - "80:80"
      - "443:443"
    image: overtone1000/nginx_certbot:alpine
    volumes:
      - nginx:/etc/nginx/sites-available/ #certbot will make changes that need to persist
      - static_content:/var/www/html/ #allow static content to persist
      - certbot:/etc/letsencrypt/ #certbot will make changes that need to persist
      - certbot_var:/var/lib/letsencrypt/ #certbot will make changes that need to persist  
      - /etc/timezone:/etc/timezone:ro  #Set time zone to be the same as the host machine
      - /etc/localtime:/etc/localtime:ro #Set local time to be the same as the host machine
    environment:
      CERTBOT_WEBHOOK_PRE: "https://health.overdesigned.org/ping/483c2762-92e7-433a-93b1-d0f7a841ba41/start" #webhook for certbot pre-renewal
      CERTBOT_WEBHOOK_POST: "https://health.overdesigned.org/ping/483c2762-92e7-433a-93b1-d0f7a841ba41" #webhook for certbot post-renewal
      HEALTHCHECK_URL: "https://health.overdesigned.org/ping/00242d37-a34f-47ff-9f19-2ca0b3d44b59" #webhook for certbot post-renewal
    depends_on:
      - backend
    logging:
      driver: json-file
      options:
        max-size: 1m

  core:
    restart: always
    image: docker.io/overtone1000/block_divider:latest
    networks:
      - internal_net
    volumes:
      - /etc/timezone:/etc/timezone:ro  #Set time zone to be the same as the host machine
      - /etc/localtime:/etc/localtime:ro #Set local time to be the same as the host machine
    depends_on:
      - postgres
    environment:
      EMAIL_FROM_ADDRESS: $EMAIL_FROM_ADDRESS
      EMAIL_SMTP_URL: $EMAIL_SMTP_URL
      EMAIL_SMTP_PORT: $EMAIL_SMTP_PORT
      EMAIL_USER: $EMAIL_USER
      EMAIL_PASSWORD: $EMAIL_PASSWORD
      DATABASE_URL: "postgres://${DB_USER}:${DB_PASSWORD}@localhost/${DB_NAME}"
      FILE_ROOT: "/var/www/block_divider"
    logging:
      driver: json-file
      options:
        max-size: 1m

  postgres:
    restart: always
    image: postgres:12
    networks:
      - internal_net
    volumes:
      - block_divider_db_volume:/var/lib/postgresql/data/ #need to do this directory or the container will mount a second volume
      - /etc/timezone:/etc/timezone:ro  #Set time zone to be the same as the host machine
      - /etc/localtime:/etc/localtime:ro #Set local time to be the same as the host machine
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      PGDATA: "/var/lib/postgresql/data/block_divider"
      POSTGRES_DB: $DB_NAME
    logging:
      driver: json-file
      options:
        max-size: 1m  

volumes:
  cron:
    name: nginx_trm_cron
  nginx:
    name: nginx_trm_nginxconfig
  static_content:
    name: nginx_trm_static_content
  certbot:
    name: nginx_trm_certbot
  certbot_var:
    name: nginx_trm_certbotvar
  block_divider_db_volume:
    name: block_divider_db_volume

networks:
  internal_net:
    name: internal_net
    driver: bridge
    attachable: true